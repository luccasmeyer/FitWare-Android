// Generated by view binder compiler. Do not edit!
package com.example.fitware.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fitware.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentCadastroBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button bCadastrarCadastro;

  @NonNull
  public final Button bCancelarCadastro;

  @NonNull
  public final EditText edEmailCadastro;

  @NonNull
  public final EditText edNomeCadastro;

  @NonNull
  public final EditText edSenhaCadastro;

  private ContentCadastroBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button bCadastrarCadastro, @NonNull Button bCancelarCadastro,
      @NonNull EditText edEmailCadastro, @NonNull EditText edNomeCadastro,
      @NonNull EditText edSenhaCadastro) {
    this.rootView = rootView;
    this.bCadastrarCadastro = bCadastrarCadastro;
    this.bCancelarCadastro = bCancelarCadastro;
    this.edEmailCadastro = edEmailCadastro;
    this.edNomeCadastro = edNomeCadastro;
    this.edSenhaCadastro = edSenhaCadastro;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentCadastroBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentCadastroBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_cadastro, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentCadastroBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bCadastrarCadastro;
      Button bCadastrarCadastro = ViewBindings.findChildViewById(rootView, id);
      if (bCadastrarCadastro == null) {
        break missingId;
      }

      id = R.id.bCancelarCadastro;
      Button bCancelarCadastro = ViewBindings.findChildViewById(rootView, id);
      if (bCancelarCadastro == null) {
        break missingId;
      }

      id = R.id.edEmailCadastro;
      EditText edEmailCadastro = ViewBindings.findChildViewById(rootView, id);
      if (edEmailCadastro == null) {
        break missingId;
      }

      id = R.id.edNomeCadastro;
      EditText edNomeCadastro = ViewBindings.findChildViewById(rootView, id);
      if (edNomeCadastro == null) {
        break missingId;
      }

      id = R.id.edSenhaCadastro;
      EditText edSenhaCadastro = ViewBindings.findChildViewById(rootView, id);
      if (edSenhaCadastro == null) {
        break missingId;
      }

      return new ContentCadastroBinding((ConstraintLayout) rootView, bCadastrarCadastro,
          bCancelarCadastro, edEmailCadastro, edNomeCadastro, edSenhaCadastro);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
